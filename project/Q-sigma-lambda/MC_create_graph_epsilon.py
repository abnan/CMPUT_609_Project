import csv
import matplotlib.pyplot as plt
import numpy as np

td_sigma = [1.0, 0.849374233626161, 0.7139789160508956, 0.6283713363108339, 0.5844007924859155, 0.593255966642609, 0.5313334782204839, 0.434589013315944, 0.38854245171829677, 0.3566201801933296, 0.3333320126531793, 0.3248128235299271, 0.29280147746943064, 0.28563964316819723, 0.2579091017487765, 0.25854416430303834, 0.22588380473209685, 0.21387674571038448, 0.20420298928484787, 0.18673144651962528, 0.18436630541853954, 0.17630178815311104, 0.17580095913528385, 0.1740292095194718, 0.17297383583585343, 0.17161273330659893, 0.1657747541257048, 0.16210358153847196, 0.15652580593166052, 0.1534665025341107, 0.15270017709642725, 0.15147113765379117, 0.14990191192747937, 0.14958645571889015, 0.14865943801704787, 0.14351120233543294, 0.13988248170596018, 0.13823756720191477, 0.14094747725303444, 0.13999636050826647, 0.14047134978063797, 0.14114944114836395, 0.14180311499163595, 0.14282325461132256, 0.143827653116897, 0.14343098960743125, 0.14342690638150835, 0.1438880728199012, 0.1409797457858721, 0.14056413956012853, 0.13346503199309645, 0.13622895421896797, 0.13582056092476838, 0.13559124469495007, 0.13540505786168908, 0.1331332417233285, 0.1331350370912513, 0.1311404592683532, 0.13095522011938635, 0.13106118346716983, 0.12886022381290632, 0.12921453428560556, 0.12877572957752054, 0.129804056571374, 0.1301982541675412, 0.1290608791027557, 0.12724153155057263, 0.12730927386634708, 0.1253287850477152, 0.12331516646938971, 0.12331917899844008, 0.12302877775447969, 0.12189057940613911, 0.12196608886741366, 0.1220169597596788, 0.12208009178834645, 0.12191994103087306, 0.11856598179111998, 0.11855907405490879, 0.11820187227586174, 0.11667150909773823, 0.11669769976376071, 0.11554172603165322, 0.11563238123550207, 0.11475155931428635, 0.11414708857633338, 0.11384598228090435, 0.11387891753593825, 0.11407940608034173, 0.11406275264235208, 0.11419133965035484, 0.11438005960162681, 0.11458356323266858, 0.11478079314900806, 0.11352365568223127, 0.11228512426323176, 0.11237288488618477, 0.11241664204569728, 0.11291728604209351, 0.1122015775139796, 0.11156763963660975, 0.11187355858852134, 0.11186427676995309, 0.1114276312052507, 0.10819909310403723, 0.10767200645284977, 0.1077860736971815, 0.10813745116904407, 0.10800159568532977, 0.10685746095958218, 0.10685993164771182, 0.10692656128558937, 0.10707837360156768, 0.10579726104279262, 0.10488692958079246, 0.10492021988045323, 0.1053384500445412, 0.1053739259417083, 0.10536414409732318, 0.10445421256231152, 0.10554044073229846, 0.10585558132644185, 0.10576046890402874, 0.10533465796444144, 0.1049344763904405, 0.10489353878189109, 0.10491797400225411, 0.10427166390296351, 0.10429421728521383, 0.10555546388799172, 0.10497688890693473, 0.10514097879388692, 0.10488303725441783, 0.10492547922198693, 0.10493944411553208, 0.10496191381026798, 0.10471053839258111, 0.10474316678267644, 0.10468835686965608, 0.10438620728967599, 0.10430895211660472, 0.12460866962888623, 0.12267540919569521, 0.12267969700742877, 0.12218789717635282, 0.12201964444515234, 0.12203076039141715, 0.12203391418759989, 0.12201084089038214, 0.12201585217059897, 0.12179674720888425, 0.12170858672594272, 0.12170057089897955, 0.12162598901095756, 0.12162685914002971, 0.12077054299369414, 0.12059165552839113, 0.1205607060297999, 0.12022644846683261, 0.1202977376331221, 0.12021179748163939, 0.12019859628800934, 0.12021935388937202, 0.12024702839082542, 0.12019889285262418, 0.11973089249108851, 0.11954265072717916, 0.11956010453948669, 0.11965571384181128, 0.11967679112658247, 0.12076966770187049, 0.12038301413252259, 0.12018702379002742, 0.1200935783301732, 0.11955676403162441, 0.11896651517726417, 0.11896844980119749, 0.11889578959280188, 0.11890318367133847, 0.1188542928614828, 0.11833784715748921, 0.11812564099380624, 0.1178429094440757, 0.11754894068983718, 0.11750909771624873, 0.1174510538822902, 0.11743620199067921, 0.11741811897046267, 0.11735350684473925, 0.1172658924256191, 0.11660110230520024, 0.11650851373243627, 0.11637345444163616, 0.11615244750179639, 0.11612122769632882, 0.11584721302803373, 0.11576548341024367, 0.11530012821636502, 0.11529212724151129, 0.11521731345086256]
dynamic_sigma = [0.95**(i+1) for i in range(200)]
# colours = ['r--','b--','r-.','b-.','r-','b-','r:','b:','b--']
colours = ['r','g','b','y','p']
print(len(td_sigma))
colour_index = 0
plt.plot(np.arange(200), td_sigma, colours[1], label = "TD error based sigma")
plt.plot(np.arange(200), dynamic_sigma, colours[0], label = "Dynamic sigma")
# for i in range(0, results.shape[0]):
#     plotx = np.arange(10, results.shape[1]-1+10)
#     plt.plot(plotx, ploty, colours[colour_index], label = results[i,0])
#     colour_index+=1

plt.xlabel('Episodes')
plt.ylabel('Sigma')
plt.legend()
plt.show()