import csv
import matplotlib.pyplot as plt
import numpy as np

with open('CartPole_results2.csv', 'r') as f:
    reader = csv.reader(f)
    result_list = list(reader)

results = np.array(result_list)
#dynamic decay
std_error=[]
dynamic_decay_std_error = [0.22541694562521247, 0.28676376593984115, 0.3382244130691929, 0.4286046023912949, 0.47148651635014965, 0.5702084761479786, 0.6591396493300945, 0.7090309524407239, 0.8385095348479943, 0.9059909733716998, 0.9672912745000857, 1.0887768161216513, 1.177805267773922, 1.289967504837234, 1.3677533768742813, 1.4510880078051778, 1.6181944534313544, 1.7907228126306984, 1.960600959884494, 2.190405409231588, 2.149346517311483, 2.5578866214511935, 2.2990622931445333, 2.767660354419234, 2.9789526677347533, 3.3004379536291846, 3.788683349367561, 4.151682476008491, 4.185277738745542, 4.504261294654651, 5.045242821731774, 5.5233509529484, 5.36168436827225, 5.8548583707768715, 6.020839860122423, 6.713856891563895, 6.507162604600872, 6.385085878487775, 7.8796269679673925, 7.835771018282184, 8.78279617428749, 9.634486615851621, 10.086723901457749, 10.290907691156498, 11.454600901740704, 11.74841022019707, 12.782100633488652, 12.858828151006453, 13.624277651285261, 14.815769283601982]
dynamic_decay_std_error = [2.58*i for i in dynamic_decay_std_error]
std_error.append(dynamic_decay_std_error)
#td_error_max
td_error_max_std_error = [0.20745676079607528, 0.2677412197906778, 0.3225026838399953, 0.3940456933453276, 0.4352921059472593, 0.5316593839818874, 0.6260125512607555, 0.6859373894197632, 0.7487602477802892, 0.8146172229556652, 0.9291555574687159, 0.9669095128288892, 1.043447729234196, 1.1407528549935784, 1.2840882532661062, 1.395695071245865, 1.5593499852836117, 1.5544599800699277, 1.8486336697547734, 1.9029600780930744, 2.159626584398099, 2.2929889629878293, 2.3839128059549495, 3.0016867529705693, 3.2481447511819734, 2.9732954979549207, 3.4822294931328117, 3.5165639515868325, 4.2022114723135955, 4.727319926312476, 4.407784246910345, 5.247937237646712, 5.281565886090886, 6.117280225519835, 6.955398311735712, 7.011807571949191, 7.867676034387727, 8.56792635444254, 9.249830446129865, 9.632943964503479, 10.1630251162612, 11.141506549453533, 11.332508612327459, 11.712188265050388, 12.834134239752636, 13.904171045711102, 13.851517279246488, 15.59745440340827, 16.071188831096443, 16.87436046802734]
td_error_max_std_error = [2.58*i for i in td_error_max_std_error]
std_error.append( td_error_max_std_error)
# colours = ['r--','b--','r-.','b-.','r-','b-','r:','b:','b--']
colours = ['r','g','b','y','p']

colour_index = 0

for i in range(0, results.shape[0]):
    plotx = np.arange(results.shape[1]-1)
    ploty = list(map(float, results[i,1:]))
    plt.plot(plotx, ploty, colours[colour_index], label = results[i,0])
    plt.fill_between(plotx, np.array(ploty)-std_error[i], np.array(ploty)+std_error[i], color=colours[colour_index], alpha=0.3)
    colour_index+=1

plt.xlabel('Episode Number')
plt.ylabel('Average Return Per Episode')
# plt.legend(loc=2)
plt.show()