import csv
import matplotlib.pyplot as plt
import numpy as np

with open('CartPole_results.csv', 'r') as f:
    reader = csv.reader(f)
    result_list = list(reader)

results = np.array(result_list)
#dynamic decay
std_error=[]
dynamic_decay_std_error = [1.670306558689153, 3.926432859479454, 4.110810625655236, 5.723193077295226, 4.110495225638877, 4.524453005612944, 6.045196440149815, 6.61084684439142, 8.74228408369346, 12.379120970408199, 16.244315436484236, 14.828792095110106, 20.619085794476923, 13.073163771635388, 14.264627965705941, 21.62904306713545, 20.65054488385234, 21.735987118141196, 25.21443824478348, 22.59816477061799, 22.480217970473507, 26.53045231427463, 53.27011803065581, 52.109623477818374, 33.33087414095226, 57.78936451458867, 40.472926988296756, 27.08440961143513, 37.4058885738596, 54.64675357237611, 57.39068161295874, 31.93973667706107, 76.66162628068884, 88.06181848565247, 49.40795668715718, 54.68473823655006, 112.0736477678852, 115.33429992417693, 75.70150635225168, 119.40239067958396, 127.77486912143563, 165.4597622716774, 95.88283514268858, 52.43404484683591, 72.40989161709884, 110.15756106141782, 132.49250413136588, 147.17516332588187, 61.32682365816771, 128.4590876505045, 166.69783519590166, 151.47951036031245, 97.21440972921657, 124.48360455899403, 208.56207282006, 207.95943570562022, 100.06691363282872, 161.0741034927713, 185.5707943723904, 220.053353448658, 199.26890930599285, 228.63495462417814, 291.8676395491628, 195.73640801853907, 360.92913943875465, 182.64325956355466, 249.03715397305683, 204.30419221347367, 282.03910455821546, 309.5479314484269, 207.05529617954716, 239.63570136980843, 326.3471938656743, 470.7848603130734, 281.57869462017186, 319.77169676348785, 187.5618620375688, 313.7175675842843, 361.6953069795072, 352.3190373283851, 325.5137018237481, 211.39938221290998, 244.15543225576616, 375.790241725354, 332.5851429574087, 438.7299929330112, 370.5733854596144, 338.95148576160574, 602.8434294441633, 528.6794220848775, 391.4753774836931, 469.621572370776, 328.1538482160464, 358.35430134993493, 383.86508455315385, 446.09614486005137, 484.02957957133157, 388.3100178980707, 448.98568331184015, 447.8291947550985, 417.8723833708086, 431.46990932277066, 406.34019104563106, 295.4346128587509, 471.60515463149886, 512.2261780698054, 552.7413354282453, 380.41060149659336, 427.745231066344, 697.0587750283329, 516.5213084046002, 423.50351306571235, 549.5547763271646, 547.852140840939, 450.4837901012644, 502.8147980161283, 614.6811959251722, 566.9980584402384, 542.6646650040889, 483.7171601783422, 474.8426560451368, 459.7727691545031, 542.7618890554126, 451.5358889158203, 543.1864500335037, 451.92459636536717, 455.41565785444845, 467.7790643027968, 452.22307713782146, 750.9373151974803, 607.6405750927105, 490.85156908682694, 506.951968774163, 755.6551571788548, 642.5007893100211, 583.0200738362273, 560.0942347310853, 495.1657982938644, 463.07297788901485, 522.3895576253415, 448.21528128344755, 500.6720578132955, 544.2700807604622, 571.7017982926064, 538.1163538678229, 450.8822161673712, 494.6438782993276, 600.6296917494172, 496.8816493643129, 549.134719769202, 486.4803356724709, 513.5714055231268, 626.64320768999, 671.5225293398578, 642.948303881424, 578.541781848122, 571.8899967686093, 667.397775180589, 532.0216358936918, 506.7382706003169, 529.8563893462076, 453.80388922418905, 407.0412724466648, 435.8929991121674, 527.3727948387175, 631.0994468980305, 540.0776160321773, 428.17820008029366, 585.5751728002135, 487.1026986283283, 510.22164797174185, 498.47239658380283, 457.48716750964724, 511.2705300122431, 457.43005443346203, 511.5589098618067, 609.6876684959275, 456.0792302396591, 449.2034687354941, 663.9625824781093, 565.9049821692684, 423.5652815080575, 502.31199723279553, 661.9649595227831, 507.3815285118291, 490.85041653848066, 442.3302449290574, 561.83071506994, 555.8274388692951, 551.4182019656224, 389.03894355706854, 455.2382406784386, 598.6403826037799, 407.6640917164523, 537.6525864115227, 443.7379679450475, 448.8476729359305, 465.47681634642123, 467.09747679044466, 526.1195589369397]
std_error.append(dynamic_decay_std_error[30:])
#td_error_max
td_error_max_std_error = [2.441597837482659, 2.1676715618377247, 3.030387928962231, 3.65291376848674, 5.18146156986617, 5.124435968962828, 4.174383187969211, 9.856098365986412, 6.101328625799466, 10.275698467744176, 10.269643177832421, 7.802331959100433, 9.506886977344372, 15.316518403344801, 14.739039961951388, 12.401907272673828, 15.346714827610501, 14.710659366595365, 20.18988704772763, 24.38219290794001, 19.264611363845365, 20.81954552818096, 21.38338913736548, 29.704569934607708, 37.0822688626249, 22.241443208569, 23.166530577537934, 27.31664055113659, 45.2664115984468, 49.11300287093021, 27.036020620646077, 37.725151504003264, 41.546033553156434, 45.2895790552308, 63.73048547594785, 47.94842874380765, 63.33309538464073, 43.10544906389446, 49.337273242448255, 50.03461801592973, 71.03089820634398, 74.52964266652563, 64.85465980945393, 100.56093060428589, 78.00215366257524, 119.44285366232673, 116.45039757768112, 105.18871564954104, 137.6141036958058, 156.5691769506374, 154.79124748835122, 151.70548840104632, 216.35532147603857, 165.66191875020644, 152.47191347917163, 342.28182841629206, 174.5972332970944, 180.50120338657024, 142.02829682848414, 336.0608779313653, 145.2725117666794, 380.4038270890554, 259.50148017111576, 337.31709889064325, 270.7378646200047, 348.4179145796037, 277.58716954499175, 345.9239827982443, 344.79567566313824, 292.2087983206529, 229.5125811017775, 289.8944313004305, 300.67991735232334, 373.9728191994707, 407.6346632022356, 349.43939809214413, 453.9652667099102, 375.7019242364883, 416.8322583294148, 548.1117623432286, 409.4611504636306, 510.05811028156387, 612.1600502025594, 592.515355138582, 481.91535387451603, 375.5448726463989, 537.7522329800221, 492.9472678694953, 393.036393606241, 387.3679429224881, 486.4263347106115, 687.9849427676453, 486.47230527543906, 382.4458038729148, 481.72203894362156, 513.3453116674974, 598.727889995948, 453.9261068444951, 659.3132723554107, 508.75082146764146, 700.8291304133982, 452.7320972440545, 574.8015353458966, 737.2923140593559, 466.9951249199504, 518.5418735222836, 494.63555988121186, 658.4751155541111, 649.5991996446731, 635.581213607671, 617.2327671276048, 531.0001842899868, 574.9313151072918, 667.2559534571423, 560.1469723304768, 600.4773776013548, 743.3389343300942, 642.149412130853, 695.6698483476196, 695.6630767109895, 576.8127440088334, 573.5397021131143, 738.7992590440248, 553.3528478746631, 576.2710340074366, 587.9366977694112, 527.3620104861556, 619.993425010298, 647.848552552215, 831.3567627072027, 726.5855001436514, 514.6011794574513, 624.6962448774605, 702.1044259161168, 534.2653716796551, 590.4021946944302, 559.4914579902003, 597.9999177558472, 558.0608424491007, 528.390489008839, 591.2174398806245, 540.1049255200326, 551.8944265663497, 637.8581566461309, 453.3001135936323, 643.6436906200511, 524.6384628246389, 799.4079644612005, 628.2220532932604, 752.0868106701512, 498.47586093109857, 733.7616438708145, 636.5251899618743, 569.0484614195877, 702.529188717451, 685.4492325475316, 496.89345980803563, 671.3313767812435, 592.5826392192064, 644.6335974024314, 618.6900830108723, 771.7157403837244, 796.1949273789679, 800.8513893700876, 592.5613958266265, 658.823010875455, 456.7257896583025, 504.37798512127785, 701.2848626991745, 650.1039039253649, 469.07753708315647, 482.9711471910097, 877.7783017795552, 647.0400062623639, 583.5456855842565, 524.4428144793292, 650.4736902250545, 615.0777974167171, 666.0377746914959, 685.3080720697809, 760.6832898618189, 614.22438334537, 721.7409270167516, 709.0718582231282, 617.6689724277883, 642.124101814439, 606.876563603341, 569.1652347078132, 610.5854360161238, 610.2344630541609, 793.0129584634793, 645.3843572716959, 702.587593460061, 580.8517078773205, 521.9659879522803, 593.3346306520463, 568.1899127052504, 537.8578804210272, 790.2483282892789, 794.5880899755546]
std_error.append( td_error_max_std_error[30:])
# colours = ['r--','b--','r-.','b-.','r-','b-','r:','b:','b--']
colours = ['r','g','b','y','p']

colour_index = 0

for i in range(0, results.shape[0]):
    plotx = np.arange(30, results.shape[1]-1+30)
    ploty = list(map(float, results[i,1:]))
    plt.plot(plotx, ploty, colours[colour_index], label = results[i,0])
    plt.fill_between(plotx, np.array(ploty)-std_error[i], np.array(ploty)+std_error[i], color=colours[colour_index], alpha=0.3)
    colour_index+=1

plt.xlabel('Episodes')
plt.ylabel('Average Return')
plt.legend(loc=2)
plt.show()